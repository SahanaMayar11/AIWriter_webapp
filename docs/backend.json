{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the SpellAura AI application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "Full name of the user."
        },
        "preferredLanguage": {
          "type": "string",
          "description": "User's preferred language for the application (e.g., 'en', 'hi')."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email",
        "name",
        "preferredLanguage",
        "createdAt",
        "updatedAt"
      ]
    },
    "DraftHistory": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "DraftHistory",
      "type": "object",
      "description": "Represents a draft or outline generated by the user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the draft history entry."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N DraftHistory)"
        },
        "topic": {
          "type": "string",
          "description": "Topic of the draft or outline."
        },
        "content": {
          "type": "string",
          "description": "The generated draft or outline content."
        },
        "language": {
          "type": "string",
          "description": "Language used for the draft or outline (e.g., 'en', 'hi')."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the draft/outline was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the draft/outline was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "topic",
        "content",
        "language",
        "createdAt",
        "updatedAt"
      ]
    },
    "Admin": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Admin",
      "type": "object",
      "description": "Represents an administrator of the SpellAura AI application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the admin entity."
        },
        "email": {
          "type": "string",
          "description": "Email address of the admin.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "Full name of the admin."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the admin account was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the admin account was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email",
        "name",
        "createdAt",
        "updatedAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous",
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. Path-based ownership enables simple security rules.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/draftHistories/{draftHistoryId}",
        "definition": {
          "entityName": "DraftHistory",
          "schema": {
            "$ref": "#/backend/entities/DraftHistory"
          },
          "description": "Stores draft history for each user. Path-based ownership ensures that only the user can access their own drafts.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "draftHistoryId",
              "description": "The unique identifier of the draft history entry."
            }
          ]
        }
      },
      {
        "path": "/roles_admin/{adminId}",
        "definition": {
          "entityName": "Admin",
          "schema": {
            "$ref": "#/backend/entities/Admin"
          },
          "description": "Collection of admin users. Existence of a document here grants admin privileges.",
          "params": [
            {
              "name": "adminId",
              "description": "The unique identifier of the admin user."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure security, scalability, and ease of debugging, adhering to the principles of Authorization Independence, Clarity of Intent, DBAC, and QAPs. User data and associated drafts are stored in hierarchical paths to leverage Firestore's security rules effectively. Admin roles are managed through a dedicated collection. This design supports secure `list` operations and atomic transactions. Authorization independence is achieved by avoiding `get()` calls in security rules, primarily through the use of path-based ownership for user-related data. \n\nSpecifically, the structure separates user data from admin data, ensuring that different security rules can be applied to each. Draft histories are stored as subcollections of users, allowing for easy querying of a user's drafts. Admin users are granted elevated privileges through a separate collection, simplifying role management and security rules. This segregation supports the QAPs requirement by enabling secure listing of drafts within a user's context without exposing drafts from other users or requiring filtering in rules."
  }
}
